<!doctype html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <title>EvB Register</title>
    <script type="text/javascript" src="jsencrypt.min.js"></script>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
    <style>
        .bd-placeholder-img {
            font-size: 1.125rem;
            text-anchor: middle;
            -webkit-user-select: none;
            -moz-user-select: none;
            user-select: none;
        }

        @media (min-width: 768px) {
            .bd-placeholder-img-lg {
                font-size: 3.5rem;
            }
        }

        html,
        body {
            height: 100%;
        }

        body {
            display: flex;
            align-items: center;
            padding-top: 40px;
            padding-bottom: 40px;
            background-color: #f5f5f5;
        }

        .form-signin {
            width: 100%;
            max-width: 330px;
            padding: 15px;
            margin: auto;
        }

        .form-signin .form-floating:focus-within {
            z-index: 2;
        }

        .form-signin input[type="email"] {
            margin-bottom: -1px;
            border-bottom-right-radius: 0;
            border-bottom-left-radius: 0;
        }

        .form-signin input[type="password"] {
            margin-bottom: -1px;
            border-top-left-radius: 0;
            border-top-right-radius: 0;
        }

        .btn {
            margin-top: 10px;
            border-top-left-radius: 0;
            border-top-right-radius: 0;
        }
    </style>
</head>

<body class="text-center">
    <main class="form-signin">
        <form action="/register" method="post" id="formRegister">
            <img class="mb-4" src="/EvB.png" alt="" width="120" height="120">
            <h1 class="h3 mb-3 fw-normal">EvB Voter Registration</h1>

            <div class="form-floating">
                <input name="email" id="email" type="email" class="form-control" placeholder="Email">
                <label for="floatingInput">Email</label>
            </div>
            <div class="form-floating">
                <input name="password" id="password" type="password" class="form-control" placeholder="Password">
                <label for="floatingPassword">Password</label>
            </div>
            <div class="form-floating">
                <input name="confirmPassword" id="confirmPassword" type="password" class="form-control"
                    placeholder="Confirm Password">
                <label for="floatingPassword">Confirm Password</label>
            </div>
            <input type="hidden" name="public_key" id="public_key">

            <div id="passwordMatch"></div>
            <input type="button" onclick="isMatch()" value="Register" class="w-100 btn btn-lg btn-primary">
            <p class="mt-5 mb-3 text-muted">&copy; 2017â€“2021</p>
        </form>

    </main>

    <script>
        // check both password
        async function isMatch() {
            var pass = document.getElementById("password").value;
            var confPass = document.getElementById("confirmPassword").value;
            var warning = document.getElementById("passwordMatch");
            var form = document.getElementById("formRegister");

            if (pass != confPass) {
                warning.innerHTML = "password is not match!";
            } else {
                var keySize = 2048;
                var crypt = new JSEncrypt({ default_key_size: keySize });
                var dt = new Date();
                var time = -(dt.getTime());
                crypt.getKey();
                dt = new Date();
                time += (dt.getTime());

                // generate RSA Pair Key
                var privKey = crypt.getPrivateKey();
                var pubKey = crypt.getPublicKey();

                // download both key using async await
                await downloadProcess(pubKey, privKey)

                // post data form to server
                form.submit();
            }
        }

        // function to sequence download public & private key, also send public key to hidden form value
        function downloadProcess(pubKey, privKey) {
            var email = document.getElementById("email").value
            return new Promise((resolve, reject) => {
                download(`${email}-public_key.pem`, pubKey);
                download(`${email}-private_key.pem`, privKey);
                document.getElementById("public_key").value = pubKey;
                resolve()
            })
        }

        // function to download file
        function download(filename, text) {
            var element = document.createElement('a');
            element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));
            element.setAttribute('download', filename);

            element.style.display = 'none';
            document.body.appendChild(element);

            element.click();

            document.body.removeChild(element);
        }
    </script>
</body>

</html>